import numpy as np
import matplotlib.pyplot as plt
import cv2
import time

start_time = time.time()

filename = 'R2.JPG.jpg'

img1 = cv2.imread(filename)
img2 = img1
#obr detector

orb = cv2.ORB_create() # create orb object

keypoints1 , descriptors1 = orb.detectAndCompute(img1,None) #detect and compute keypoints and descriptors of corners
keypoints2 , descriptors2 = orb.detectAndCompute(img2, None)

for d in descriptors1:
    print(d) # print decriptors of features (array of pixels

bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck= True) # compare every descriptor of image 1 with every descriptor in image 2
matches = bf.match(descriptors1,descriptors2) #  match the closest descripors of image1 and image2

matches = sorted(matches, key = lambda x:x.distance) # soret the matches from best to worst 

matching_result = cv2.drawMatches(img1, keypoints1, img2, keypoints2, matches[:20],None) # draw the matches , the [:20] behind matches means show 20 matches only, it can be extended

for m in matches:
    print(matches)

plt.imshow(matching_result)
plt.axis('off')
print("Runtime: ", (time.time() - start_time))
plt.show()
